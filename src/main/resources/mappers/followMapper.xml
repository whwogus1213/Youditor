<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.good.mapper.followMapper">

	<!-- 팔로잉 -->
	<select id="followingList" resultType="FollowingListVO" parameterType="int">
<!-- 	SELECT -->
<!-- 		fo.followAccountId, fo.followerAccountId, ac.nickname -->
<!-- 	FROM -->
<!-- 		followlist as fo -->
<!-- 	JOIN -->
<!-- 		accounts as ac -->
<!-- 	ON -->
<!-- 		fo.followAccountId = ac.accountId -->
<!-- 	WHERE -->
<!-- 		fo.followerAccountId = #{accountId} -->
<!-- 	ORDER BY -->
<!-- 		fo.reg_date DESC -->


	select d.followAccountId, d.followerAccountId, d.nickname, d.reg_date, IFNULL(dd.check,'false') as 'check', d.picture, d.footer, d.lastFollowerCheck, d.newLogin_date
from
(SELECT fo.followAccountId, fo.followerAccountId, ac.nickname, fo.reg_date, ac.picture, ac.footer, ac.lastFollowerCheck, ac.newLogin_date
FROM followlist as fo JOIN accounts as ac ON fo.followAccountId = ac.accountId
WHERE fo.followerAccountId = #{accountId}
ORDER BY fo.reg_date DESC) as d LEFT OUTER JOIN 
(select * , 'true' as 'check'
from (SELECT fo.followAccountId as baseF , fo.followerAccountId as baseFF , ac.nickname as nick, fo.reg_date as foDate
FROM followlist as fo JOIN accounts as ac ON fo.followAccountId = ac.accountId
WHERE fo.followerAccountId = #{accountId}
ORDER BY fo.reg_date DESC)as base, followlist as base2
where base.baseF = base2.followerAccountId and base.baseFF = base2.followAccountId)as dd
ON dd.baseF = d.followAccountId and dd.baseFF = d.followerAccountId
order by d.reg_date desc;
	
    </select>

	<!-- 팔로워 -->
	<select id="followerList" resultType="FollowingListVO" parameterType="int">
<!-- 	SELECT -->
<!-- 		fo.followAccountId, fo.followerAccountId, ac.nickname -->
<!-- 	FROM -->
<!-- 		followlist as fo -->
<!-- 	JOIN -->
<!-- 		accounts as ac -->
<!-- 	ON -->
<!-- 		fo.followAccountId = ac.accountId -->
<!-- 	WHERE -->
<!-- 		fo.followAccountId = #{accountId} -->
<!-- 	ORDER BY -->
<!-- 		fo.reg_date DESC -->
select d.followAccountId, d.followerAccountId, d.nickname, d.reg_date, IFNULL(dd.check,'false') as 'check', d.picture, d.footer, d.lastFollowerCheck, d.newLogin_date
from
(SELECT fo.followAccountId, fo.followerAccountId, ac.nickname, fo.reg_date, ac.picture, ac.footer, ac.lastFollowerCheck, ac.newLogin_date
FROM followlist as fo JOIN accounts as ac ON fo.followerAccountId = ac.accountId
WHERE fo.followAccountId = #{accountId}
ORDER BY fo.reg_date DESC) as d LEFT OUTER JOIN 
(select * , 'true' as 'check'
from (SELECT fo.followAccountId as baseF , fo.followerAccountId as baseFF , ac.nickname as nick, fo.reg_date as foDate
FROM followlist as fo JOIN accounts as ac ON fo.followerAccountId = ac.accountId
WHERE fo.followAccountId = #{accountId}
ORDER BY fo.reg_date DESC)as base, followlist as base2
where base.baseF = base2.followerAccountId and base.baseFF = base2.followAccountId)as dd
ON dd.baseF = d.followAccountId and dd.baseFF = d.followerAccountId
order by IFNULL(dd.check,'false'), d.reg_date desc;


    </select>
    
    <!-- 맛팔 체크 -->
    <select id="followEachOtherCheck" parameterType="FollowListVO" resultType="int">
    SELECT
    	count(*)
    FROM
    	followlist
    WHERE
    	followAccountId = #{followAccountId}
    	AND
    	followerAccountId = #{followerAccountId}
    </select>

	<!-- 팔로잉 추가 -->
    <insert id="insert" parameterType="FollowListVO">
    	insert into followlist(followAccountId, followerAccountId, reg_date)
		values(#{followAccountId}, #{followerAccountId}, now())
    </insert>

    <!-- 팔로우 취소 -->
    <delete id="delete" parameterType="FollowListVO">
        delete from followlist
        where followAccountId = #{followAccountId} and followerAccountId = #{followerAccountId}
    </delete>
	
	<!-- 마지막 팔로워 체크 시간 갱신 -->
	<update id="updateLastFollowerCheck" parameterType="int">
		UPDATE
			accounts
		SET
			lastFollowerCheck = now()
		WHERE
			accountId = #{accountId}
	</update>
	
	<!-- 페이징 -->
<!-- 
	<select id="paging" parameterType="PagingVo" resultType="FollowListVO">
        SELECT @rownum:=@rownum+1 as no, notice.*
		FROM noticeboard notice
		WHERE (@rownum:=0)=0
		ORDER BY no desc
		LIMIT #{start}, #{last}
	</select>
-->
    <!-- 카운트 -->
<!-- 
	<select id="getListCount" resultType="int">
		SELECT count(*)
		FROM followlist
	</select>    
 -->
 
	<!-- 팔로우 리스트 출력 + 페이징 + 검색-->
<!-- 
	<select id="listAll" resultType="FollowListVO">
		SELECT *
		FROM followlist
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="searchType=='followAccountId' and keyword != null and keyword != '' ">
				AND followAccountId like CONCAT('%', #{keyword}, '%')
			</if>
		</trim>
		order by reg_date desc
		LIMIT #{startList}, #{listSize}
	</select>
 -->
	<!-- 팔로워 수 -->
<!-- 
	<select id="getFollowListCnt" resultType="int">
		select count(*)
		from followlist
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="keyword != null and keyword != '' ">
				<if test="searchType=='followAccountId'">
					AND followAccountId like CONCAT('%', #{keyword}, '%')
				</if>
			</if>
		</trim>
	</select>
 -->	
</mapper>