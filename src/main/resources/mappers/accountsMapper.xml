<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.good.mapper.accountsMapper">

	<!--
	mybatis-config.xml의 typeAlias에 등록해두지 않았다면
	<select id="selectAccounts" resultType="com.good.dto.AccountsVO" >
		...
	</select>
	이렇게 해야 한다.
	-->

	<!-- 회원 랭킹 리스트 -->
	<select id="selectAccounts" resultType="AccountsVO"
		parameterType="map">
		select accountId, sum(star) as star, nickname ,picture, footer
		from ( (select tbts.accountId, sum(star) as star, ac.nickname, ac.picture, ac.footer
				from (select tb.boardId, tb.accountId, ts.star from tipboard tb, tipstar ts where tb.boardId = ts.boardId) tbts,
						accounts ac where tbts.accountId = ac.accountId group by tbts.accountId)
		                union all (select vbvs.accountId, sum(star) as star, ac.nickname, ac.picture, ac.footer
		                from (select vb.boardId, vb.accountId, vs.star from videoboard vb, videostar vs where vb.boardId = vs.boardId) vbvs,
		                accounts ac where vbvs.accountId = ac.accountId group by vbvs.accountId)) union_vt 
		group by accountId order by star desc limit 5;
	</select>

	<!-- 회원 가입 -->
	<insert id="insertAccounts" parameterType="AccountsVO">
		INSERT INTO
				accounts(
						email,
						pwd,
						nickname,
						picture,
						footer,
						reg_date,
						mod_date,
						lastFollowerCheck,
						newLogin_date,
						authkey)
				VALUES(
					#{email},
					#{pwd},
					#{nickname},
					#{picture},
					#{footer},
					now(),
					now(),
					now(),
					now(),
					#{authkey})
	</insert>
	
	<!-- 이메일 체크 -->
	<select id="checkEmail" parameterType="String" resultType="Integer">
	    SELECT
	      COUNT(*)
	    FROM
	      accounts
	    WHERE
	      email = #{email}
	</select>

	<!-- 닉네임 체크 -->
	<select id="checkNickname" parameterType="String" resultType="Integer">
	    SELECT
	      COUNT(*)
	    FROM
	      accounts
	    WHERE
	      nickname = #{nickname}
	</select>

	<select id="login" resultType="AccountsVO">
		 select * from accounts where email = #{email} and pwd = #{pwd}
	</select>
	
	<update id="resetPassword" parameterType="String">
		UPDATE
			accounts
		SET
			pwd = "tempPassword",
			mod_date = now()
		WHERE
			email = #{email}
	</update>
	
	<delete id="deleteAccount" parameterType="AccountsVO">
		UPDATE
			accounts
		SET
			mod_date = now(),
			authority = 0
		WHERE
			accountId = #{accountId}
			AND
			pwd = #{pwd}
	</delete>
	
	<update id="updateAuthority" parameterType="AccountsVO">
		UPDATE
			accounts
		SET
			authority = #{authority}
		WHERE
			email = #{email}
			AND
			authkey = #{authkey}
	</update>
	
	<delete id="deleteAuthkey" parameterType="AccountsVO">
		UPDATE
			accounts
		SET
			authkey = null
		WHERE
			email = #{email}
	</delete>
	
	
	<update id="updateAccount" parameterType="AccountsVO">
		UPDATE
			accounts
		SET
			email = #{email},
			nickname = #{nickname},
			picture = #{picture},
			footer = #{footer},
			mod_date = now()
		WHERE
			accountId = #{accountId}
			AND
			pwd = #{pwd}
	</update>
	
	<update id="updatePassword" parameterType="AccountsVO">
		UPDATE
			accounts
		SET
			pwd = #{pwd},
			mod_date = now()
		WHERE
			accountId = #{accountId}
	</update>
					
	<!-- 로그인시간 -->		
	<update id="loginDate" parameterType="AccountsVO">		
	UPDATE		
		accounts		
	SET		
		newLogin_date = now()		
	WHERE		
		email = #{email}		
		AND		
		pwd = #{pwd}		
	</update>
</mapper>


