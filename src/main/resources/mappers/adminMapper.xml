<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.good.mapper.adminMapper">
	<!-- 계정 조회 -->
	<select id="selectAccounts" resultType="AccountsVO">
		SELECT
			accountId, email, nickname, authority, picture, footer, CONVERT_TZ(reg_date,'+09:00','+00:00') as reg_date,
			CONVERT_TZ(mod_date,'+09:00','+00:00') as mod_date, CONVERT_TZ(newLogin_date,'+09:00','+00:00') as newLogin_date
		FROM
			accounts
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="searchType=='email' and keyword != null and keyword != '' ">
				AND email like CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType=='nickname' and keyword != null and keyword != '' ">
				AND nickname like CONCAT('%', #{keyword}, '%')
			</if>
		</trim>
		ORDER BY
			reg_date DESC
		LIMIT
			#{startList}, #{listSize}
	</select>
	
	<!-- 계정 수 -->
	<select id="getAccountListCnt" resultType="int">
		SELECT
			count(accountId)
		FROM
			accounts  
		 <trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="searchType=='email' and keyword != null and keyword != '' ">
				AND email like CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType=='nickname' and keyword != null and keyword != '' ">
				AND nickname like CONCAT('%', #{keyword}, '%')
			</if>
		</trim>
	</select>
	
	<select id="login" resultType="AdminVO">
        select * from admin where adminId = #{adminId} and adminPwd = #{adminPwd}
    </select>
    
    <select id="getAccountInfo" parameterType="int" resultType="AccountsVO">
    	SELECT
    		*
    	FROM
    		accounts
    	WHERE
    		accountId = #{accountId}
    </select>
    
    <!-- 카테고리 정보 취득 -->
    <select id="getCatInfo" parameterType="String" resultType="VideoCategoryVO">
    	SELECT
    		*
    	FROM
    		#{category}
    	ORDER BY
    		categoryId DESC
    </select>
	
	<!-- 이메일 체크 -->
	<select id="checkEmail" parameterType="String" resultType="Integer">
	    SELECT
	      COUNT(*)
	    FROM
	      accounts
	    WHERE
	      email = #{email}
	</select>

	<!-- 닉네임 체크 -->
	<select id="checkNickname" parameterType="String" resultType="Integer">
	    SELECT
	      COUNT(*)
	    FROM
	      accounts
	    WHERE
	      nickname = #{nickname}
	</select>
	
	<!-- 유저 포트레이트 파일 이름 취득 -->
	<select id="getOriPic" parameterType="int" resultType="String">
		SELECT
			picture
		FROM
			accounts
		WHERE
			accountId = #{accountId}
	</select>
	
	<!-- 유저 정보 업데이트 -->
	<update id="accountUpdate" parameterType="AccountsVO">
		UPDATE
			accounts
		SET
			email = #{email},
			pwd = #{pwd},
			nickname = #{nickname},
			picture = #{picture},
			footer = #{footer},
			authority = #{authority},
			mod_date = now()
		WHERE
			accountId = #{accountId}
	</update>
</mapper>
